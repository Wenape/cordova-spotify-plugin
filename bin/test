#!/usr/bin/env node

var cordova = require('cordova')
  , fs = require('fs')
  , path = require('path')
  , shell = require('shelljs')
  , temp = require('temp');

temp.track();

var old_log = console.log;

var pluginDir = path.join(__dirname, '..')
  , tmpDir = temp.mkdirSync()
  , wwwDir = path.join(tmpDir, 'www');

console.log('Temp dir: %s', tmpDir);

cordova.raw.create(tmpDir)
  .then(function() {

    shell.rm('-rf', path.join(wwwDir, '*'));
    shell.cp('-rf', path.join(pluginDir, 'test', 'js', '*'), wwwDir);
    shell.mkdir('-p', path.join(wwwDir, 'support', '{chai,mocha}'));
    shell.cp('-rf', path.join(pluginDir, 'node_modules', 'chai', '*'), path.join(wwwDir, 'support', 'chai'));
    shell.cp('-rf', path.join(pluginDir, 'node_modules', 'mocha', '*'), path.join(wwwDir, 'support', 'mocha'));
    shell.cp('-rf', path.join(pluginDir, 'development', 'Spotify.framework'), path.join(tmpDir));
    shell.cd(tmpDir);
    return cordova.raw.platform('add', 'ios');
  })
  .then(function() {
    return cordova.raw.plugin('add', pluginDir);
  })
  .then(function() {
    console.log = function() { };
    return cordova.raw.serve();
  })
  .then(function(server) {
    shell.cd(pluginDir);
    shell.exec('./node_modules/.bin/mocha-phantomjs http://localhost:8000/ios/www/', function(code, output) {
      console.log = old_log;

      server.close();

      process.exit(code);
    });
    // var phantom = require('node-phantom');

    // return phantom.create(onPhantomCreate(server), { phantomPath: require('phantomjs').path });
  });


// function onPhantomCreate(server) {
//   return function(err, ph) {
//     return ph.createPage(onPhantomCreatePage);

//     function onPhantomCreatePage(err, page) {
//       page.open("http://localhost:8000/ios/www/", onPhantomPageOpen);

//       function onPhantomPageOpen(err, status) {
//         console.log('status:', status);

//         setTimeout(function() {
//           return page.evaluate(function() {
//             return document.getElementsByTagName('body')[0].innerText;
//           }, function(err, result) {
//             console.log(err, result);
//             ph.exit();
//             server.close();
//           });
//         }, 5000);
//       }
//     }
//   }
// }
